#Basic eth0 dump

tcpdump -i lo

# Specific host and internet traffic

tcpdump -i lo tcp and host localhost

# Limit output (number of lines, and no hostnames)

tcpdump -i lo -nn -c 10 tcp and host localhost

# Limit amount of data captured per packet. Ubuntu default is 65535. Often we don't need so much.

tcpdump -i lo -s96 #Capture only 96 bytes per-packet

# Specifying ports and writing to a file

tcpdump -i eth0 port 53 -w /tmp/output

# Read the capture file with less

tcpdump -r /tmp/output | less

# Compound expressions

tcpdump -i eth0 -n "host 10.0.2.15 and (port 80 or port 443)"

#HTTP requests

tcpdump -s 1500 -SvnAi any tcp and port 8080 and dst webserver.example.net and "tcp[tcpflags] & (tcp-push) != 0"

#Capture file rollover

tcpdump -w testcapture.pcap -W 200 -C 20 -SvnAi eth2 tcp and port 80

# Replaying traffic in five steps -- needs tcprewrite and tcpreplay
# 1. Capture traffic to file, 2. Rewrite destination IP and MAC addresses
# 3. Rewrite source IP and MAC addresses, 4. Update checksums, 5. Replay

tcpdump -w dump.pcap -i eth0 
tcprewrite --infile=dump.pcap --outfile=temp1.pcap --dstipmap=0.0.0.0/0:192.168.1.20 --enet-dmac=E0:DB:55:CC:13:F1
tcprewrite --infile=temp1.pcap --outfile=temp2.pcap --srcipmap=0.0.0.0/0:192.168.1.10 --enet-smac=84:A5:C8:BB:58:1A
tcprewrite --infile=temp2.pcap --outfile=final.pcap --fixcsum 
sudo tcpreplay --intf1=eth0 final.pcap   
